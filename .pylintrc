[MAIN]
# Python code to execute, usually for sys.path manipulation such as pygtk.require()
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped. They should be base names, not paths.
ignore=.pre-commit-hooks

# Add files or directories matching the regex patterns to the ignore-list
ignore-patterns=

# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs=0

# Pickle collected data for later comparisons.
persistent=yes

# Minimum Python version to use for version dependent checks
py-version=3.9

# Discover python modules and packages in the file system subtree.
recursive=yes

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels
confidence=HIGH,INFERENCE,INFERENCE_FAILURE,UNDEFINED

# Disable the message, report, category or checker with the given id(s)
disable=
    # Too restrictive for a library
    too-few-public-methods,
    # Sometimes we need more than 7 arguments
    too-many-arguments,
    # Sometimes we need more than 15 attributes
    too-many-instance-attributes,
    # Sometimes we need more than 5 branches
    too-many-branches,
    # Import ordering (handled by isort)
    wrong-import-order,
    wrong-import-position,
    # Docstring issues
    missing-module-docstring,
    # Type issues (handled by mypy)
    unsubscriptable-object,
    duplicate-code,

[REPORTS]
# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Set the output format
output-format=text

# Tells whether to display a full report or only the messages
reports=no

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete name of functions that never returns
never-returning-functions=sys.exit,argparse.parse_error

[SIMILARITIES]
# Comments are removed from the similarity computation
ignore-comments=yes

# Docstrings are removed from the similarity computation
ignore-docstrings=yes

# Imports are removed from the similarity computation
ignore-imports=yes

# Signatures are removed from the similarity computation
ignore-signatures=yes

# Minimum lines number of a similarity.
min-similarity-lines=4

[SPELLING]
# Limits count of emitted suggestions per file.
max-spelling-suggestions=4

# Spelling dictionary name
spelling-dict=

# List of comma separated words that should be considered directives if they
# appear and the beginning of a comment and should not be checked.
spelling-ignore-comment-directives=fmt: off,fmt: on,noqa:,noqa,nosec,isort:skip,mypy:

[STRING]
# This flag controls whether inconsistent-quotes generates a warning when the
# character used as a quote delimiter is used inconsistently within a module.
check-quote-consistency=no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed
generated-members=


# Tells whether to warn about missing members when the owner of the attribute
# is inferred to be None.
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar
# checks whenever an opaque object is returned when inferring
ignore-on-opaque-inference=yes

# List of class names for which member attributes should not be checked
ignored-classes=optparse.Values,thread._local,_thread._local

# Show a hint with possible names when a member name was not found
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a
# similar match for a missing member name.
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when
# showing a hint for a missing member.
missing-member-max-choices=1

# Regex pattern to define which classes are considered mixins if ignore-mixin-members is set to 'yes'
mixin-class-rgx=.*[Mm]ixin

[VARIABLES]
# List of additional names supposed to be defined in builtins
additional-builtins=

# Tells whether unused global variables should be treated as a violation.
allow-global-unused-variables=yes

# List of names allowed to shadow builtins
allowed-redefined-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored
ignored-argument-names=_.*|^ignored_|^unused_

# Tells whether we should check for unused import in __init__ files.
init-import=no

# List of qualified module names which can have objects that can redefine builtins.
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[CLASSES]
# Warn about protected attribute access inside special methods
check-protected-access-in-special-methods=no

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning.
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=cls

[DESIGN]
# List of regular expressions of class ancestor names to ignore when counting
# public methods
exclude-too-few-public-methods=

# Maximum number of arguments for function / method
max-args=10

# Maximum number of attributes for a class
max-attributes=15

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of locals for function / method body
max-locals=20

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of statements in function / method body
max-statements=50

# Minimum number of public methods for a class
min-public-methods=1

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=BaseException,Exception

[FORMAT]
# Expected format of line ending
expected-line-ending-format=

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren=4

# String used as indentation unit
indent-string='    '

# Maximum number of characters on a single line.
max-line-length=150

# Maximum number of lines in a module
max-module-lines=5000

# Allow the body of a class to be on the same line as the declaration if body
# contains single statement.
single-line-class-stmt=no

# Allow the body of an if to be on the same line as the test if there is no else.
single-line-if-stmt=no

[IMPORTS]
# List of modules that can be imported at any level, not just the top level
allow-any-import-level=

# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=no

# Deprecated modules which should not be used, separated by a comma.
deprecated-modules=

# Output a graph (.gv or any supported image format) of external dependencies to the given file
ext-import-graph=

# Output a graph (.gv or any supported image format) of all (i.e. internal and external) dependencies to the given file
import-graph=

# Output a graph (.gv or any supported image format) of internal dependencies to the given file
int-import-graph=

# Force import order to recognize a module as part of the standard compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=

# Couples of modules and preferred modules to be used instead.
preferred-modules=

[LOGGING]
# The type of string formatting that logging methods do
logging-format-style=old

# Logging modules to check that the string format arguments are in logging function parameter format.
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO

# Regular expression of note to prohibit.
notes-rgx=

[BASIC]
# Naming style matching correct argument names.
argument-naming-style=snake_case

# Regular expression matching correct argument names
argument-rgx=

# Naming style matching correct attribute names.
attr-naming-style=snake_case

# Regular expression matching correct attribute names
attr-rgx=

# Bad variable names which should always be refused, separated by a comma.
bad-names=foo,bar,baz,toto,tutu,tata

# Bad variable names regexes, separated by a comma. If names match any regex,
# they will always be refused
bad-names-rgxs=

# Naming style matching correct class attribute names.
class-attribute-naming-style=any

# Regular expression matching correct class attribute names
class-attribute-rgx=

# Naming style matching correct class constant names.
class-const-naming-style=UPPER_CASE

# Regular expression matching correct class constant names
class-const-rgx=

# Naming style matching correct class names.
class-naming-style=PascalCase

# Regular expression matching correct class names
class-rgx=

# Naming style matching correct constant names.
const-naming-style=UPPER_CASE

# Regular expression matching correct constant names
const-rgx=

# Minimum line length for functions/classes that require docstrings, shorter ones are exempt.
docstring-min-length=-1

# Naming style matching correct function names.
function-naming-style=snake_case

# Regular expression matching correct function names
function-rgx=

# Good variable names which should always be accepted, separated by a comma.
good-names=i,j,k,ex,Run,_

# Good variable names regexes, separated by a comma. If names match any regex,
# they will always be accepted
good-names-rgxs=

# Include a hint for the correct naming format with invalid-name.
include-naming-hint=no

# Naming style matching correct inline iteration names.
inlinevar-naming-style=any

# Regular expression matching correct inline iteration names
inlinevar-rgx=

# Naming style matching correct method names.
method-naming-style=snake_case

# Regular expression matching correct method names
method-rgx=

# Naming style matching correct module names.
module-naming-style=snake_case

# Regular expression matching correct module names
module-rgx=

# Colon-delimited sets of names that determine each other's naming style when the name regexes allow several styles.
name-group=

# Regular expression which should only match function or class names that do not require a docstring.
no-docstring-rgx=^_

# List of decorators that produce properties, such as abc.abstractproperty
property-classes=abc.abstractproperty

# Regular expression matching correct type variable names
typevar-rgx=

# Naming style matching correct variable names.
variable-naming-style=snake_case

# Regular expression matching correct variable names
variable-rgx=
