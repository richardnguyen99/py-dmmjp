[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py-dmmjp"
version = "0.0.12"
description = "A Python client library for the DMM API"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Richard Nguyen", email = "richard@richardhnguyen.com" }]
maintainers = [
    { name = "Richard Nguyen", email = "richard@richardhnguyen.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = [
    "dmm",
    "api",
    "client",
    "digital",
    "media",
    "affiliate",
    "mypy",
    "pytest",
    "asyncio",
    "http",
    "requests",
    "aiohttp",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "aiohttp>=3.8.0;python_version>='3.9'",
    "typing-extensions>=4.0.0;python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "black>=25.0.0",
    "mypy>=0.991",
    "pylint>=2.15.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "responses>=0.22.0",
    "pre-commit>=2.20.0",
    "twine>=4.0.0",
    "build>=0.8.0",
]
docs = ["sphinx>=5.0.0", "sphinx-rtd-theme>=1.0.0", "myst-parser>=0.18.0"]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "pytest-asyncio>=1.2.0;python_version>='3.9'",
    "responses>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/richardnguyen99/py-dmmjp"
Documentation = "https://py-dmmjp.readthedocs.io/"
Repository = "https://github.com/richardnguyen99/py-dmmjp.git"

[tool.setuptools.packages.find]
include = ["py_dmmjp*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
py_dmmjp = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["py_dmmjp", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true


[[tool.mypy.overrides]]
module = ["requests.*"]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
filterwarnings = ["ignore::pytest.PytestUnraisableExceptionWarning"]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# coverage configuration
[tool.coverage.run]
source = ["py_dmmjp"]
omit = ["*/tests/*", "*/test_*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
